pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
function _init()
 pc = {
  vx=0,
	 vy=0,
	 x=60,
	 y=60,
	 fric=.005,
	 steer_angle=.25,
	 angle=.25,
	 max_speed=1.5,
	 lap=1,
	 boost=1.15,
	 mag=0
	}
 
 angels={}
 for i=1,1 do
  _angel_x=flr(rnd(127))
  _angel_y=flr(rnd(127))
  add(angels, {_angel_x,_angel_y})
 end
end

function _update60()
 turn_car(pc)
 move_car(pc)
 
 move_angels()
end


function _draw()
 cls(5)
// draw_bricks()
 map(0,0,0,0,17,9)
// draw_angels()
 camera(pc.x-64,pc.y-64)
 circfill(pc.x,pc.y,2,8)
 line(pc.x,pc.y,pc.x+10*cos(pc.angle),pc.y+10*sin(pc.angle))
 print(pc.x.." "..pc.y,pc.x-62,pc.y-62)
 print(pc.lap,pc.x-62,pc.y-50)
end

function turn_car(a)
 a.mag=sqrt(a.vx^2+a.vy^2)
 if abs(a.vx)>0 or abs(a.vy)>0 then
  if btn(0) then
   a.angle+=.01*(-(.5/a.max_speed)*a.mag+1)
  end
  if btn(1) then
   a.angle-=.01*(-(.5/a.max_speed)*a.mag+1)
  end
 end
 a.angle=a.angle%1
 a.vy=a.mag*sin(a.angle)
 a.vx=a.mag*cos(a.angle)
end


function solid(_x,_y,_sflag)
 val=mget(_x/8,_y/8)
 return fget(val, _sflag) 
end


function solid_area(_x,_y,_w,_h,_sflag)
 return 
  solid(_x-_w,_y-_h,_sflag) or
  solid(_x+_w,_y-_h,_sflag) or
  solid(_x-_w,_y+_h,_sflag) or
  solid(_x+_w,_y+_h,_sflag)
end


function move_car(a)
 if btn(5) and a.mag<a.max_speed then
  a.vx+=.02*cos(a.angle)
  a.vy+=.02*sin(a.angle)
 end
 if btn(4) and a.mag>0 then
  a.vx-=.005*cos(a.angle)
  a.vy-=.005*sin(a.angle)
 end
 a.vx=a.vx*(1-a.fric)
 a.vy=a.vy*(1-a.fric)
 

 
 if solid_area(a.x+a.vx,a.y+a.vy,2,2,0) then
  a.vx*=a.boost
  a.vy*=a.boost
 end
 
 
 
 if not solid_area(a.x+a.vx,a.y,2,2,3) then
  a.x+=a.vx
 else
  a.vx*=-.001
 end
 
 if not solid_area(a.x,a.y+a.vy,2,2,3) then
 	a.y+=a.vy
 else 
  a.vy*=-.001
 end
 //angle=atan2(vx,vy)
 
 if solid_area(a.x+a.vx,a.y+a.vy,2,2,0) and solid_area(a.x,a.y,2,2,2) and a.lapcounted!='y' then
  a.lap+=1
  a.lapcounted='y'
 end
 
 if not solid_area(a.x,a.y,2,2,2) then
  a.lapcounted='n'
 end
 
end





function draw_angels()
 for angel in all(angels) do
  if angel[1]>x then
   spr(17,angel[1],angel[2])
  else
   spr(18,angel[1],angel[2])
  end
  spr(21,angel[1],angel[2],1,2)
 end
end

function move_angels()
 for angel in all(angels) do
  if angel[1]>pc.x then
  	angel[1]-=1
  else
   angel[1]+=1
  end
  if angel[2]>pc.y then
   angel[2]-=1
  else
   angel[2]+=1
  end
 end
end
  
  
__gfx__
00000000440440440440440477887788000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000077887788000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700044044044044044088778877000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000088778877000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000404404404404404477887788000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000077887788000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000440440440440440488778877000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000088778877000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000aa0000aaaa0000aaaa0000aaaa0000aa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000776666777766667777666677776666770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000077da770077ad770077aa770077aa7701000000100000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000077aa700077aa700077da700077ad7000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000007667000076670000766700007667000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000077667700776677007766770077667700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000776666777766667777666677776666770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000766006677660066776600667766006670001100000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000001110011100000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0008080104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000030400000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000030400000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000101010101010101010101000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000101010101010101010101000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000101010101010101010101000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
